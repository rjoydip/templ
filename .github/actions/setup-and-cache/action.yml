name: Setup and cache
description: Setup for node, pnpm and cache for -
inputs:
  node-version:
    required: false
    description: Node version for setup-node
    default: 18.x

runs:
  using: composite

  steps:
    - name: Install pnpm
      uses: pnpm/action-setup@v2

    - name: Set node version to ${{ inputs.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ inputs.node-version }}

    - name: Resolve package versions
      id: resolve-package-versions
      shell: bash
      run: >
        echo "$(
          node -e "
            # const fs = require('fs');
            # const lockfile = fs.readFileSync('./pnpm-lock.yaml', 'utf8');
            # const pattern = (name) => new RegExp(name + ':\\\s+specifier: [\\\s\\\w\\\.^]+version: (\\\d+\\\.\\\d+\\\.\\\d+)');
            # const cypressVersion = lockfile.match(pattern('cypress'))[1];
            # console.log('CYPRESS_VERSION=' + cypressVersion);
          "
        )" >> $GITHUB_OUTPUT

    - name: Print versions
      shell: bash
      run: echo "${{ toJson(steps.resolve-package-versions.outputs) }}"

    - name: Check resolved package versions
      shell: bash
      if: |
        contains(fromJSON('[null, "", "undefined"]'), steps.resolve-package-versions.outputs.CYPRESS_VERSION) ||
      run: echo "Failed to resolve package versions. See log above." && exit 1

    # - name: Cache Cypress v${{ steps.resolve-package-versions.outputs.CYPRESS_VERSION }}
    #   uses: actions/cache@v3
    #   id: cypress-cache
    #   with:
    #     path: ${{ env.CYPRESS_CACHE_FOLDER }}
    #     key: ${{ runner.os }}-cypress-${{ steps.resolve-package-versions.outputs.CYPRESS_VERSION }}
    #     restore-keys: |
    #       ${{ runner.os }}-cypress-
