name: Pull request auto assign

on:
  pull_request:
    types: [opened, reopened, edited, ready_for_review, synchronize]

concurrency:
  group: ci-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  triage:
    permissions:
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/labeler@v4

  add-reviews:
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]'
    steps:
      - uses: kentaro-m/auto-assign-action@v1.2.4

  pr-title-check:
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]'
    steps:
      - uses: thehanimo/pr-title-checker@v1.4.0
        with:
          pass_on_octokit_error: false
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # size-export:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@master
  #     - uses: ./.github/actions/setup-node
  #     - name: Install
  #       run: pnpm i --no-frozen-lockfile
  #     - uses: antfu/export-size-action@v1
  #       with:
  #         github_token: ${{ secrets.GITHUB_TOKEN }}
  #         paths: packages/build,packages/cli,packages/config,packages/core,packages/logger,packages/utils

  size-report:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
      - name: Use Node.js LTS
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install
      - name: Download Previous Size Data
        uses: dawidd6/action-download-artifact@v2
        with:
          name: size-data
          path: temp/size-prev
          if_no_artifact_found: warn
      - run: pnpm size:generate
      - name: Upload Size Data
        uses: actions/upload-artifact@v3
        with:
          name: size-data
          path: temp/size
      - name: Read Size Report
        id: size-report
        uses: juliangruber/read-file-action@v1
        with:
          path: ./size-report.md
      - name: Create commit comment
        uses: peter-evans/commit-comment@v2
        with:
          body: ${{ steps.size-report.outputs.content }}

  trivy-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Run Trivy vulnerability scanner in fs mode
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "."
          scan-type: "fs"
          scan-ref: "."
          skip-dirs: "third_party"
          output: "dependency-results.sbom.json"
          github-pat: ${{ secrets.GITHUB_TOKEN }}

  snyk:
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]'
    steps:
      - uses: actions/checkout@master
      - uses: ./.github/actions/setup-node
      - name: Snyk monitor
        run: |
          npx snyk auth $SNYK_TOKEN
          npx snyk monitor --all-projects
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

