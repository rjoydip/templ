---
name: CI

on:
  push:
    branches: [main]
  pull_request:

concurrency:
  group: ci-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-node
      - name: Install
        run: pnpm i
      - name: Lint
        run: pnpm run lint
      - name: Markdown Lint
        run: pnpm run lint:md
      - name: Spell Lint
        run: pnpm run lint:spell

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-node
      - name: Install
        run: pnpm i
      - name: Build
        run: pnpm run build

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-node
      - name: Install
        run: pnpm i
      - name: Test
        run: |
          pnpm run test:ci
      - name: Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  test-cli:
    runs-on: ${{ matrix.os }}
    needs: build
    timeout-minutes: 10
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node_version: [16, 18]
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-node
        with:
          node-version: ${{ matrix.node_version }}
      - name: Install
        run: pnpm i
      - name: Test CLI
        run: pnpm run test:cli

  test-storybook:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    needs: ["build"]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-node
      - name: Install
        run: pnpm i
      - name: Serve Storybook and run tests
        run: pnpm test:storybook

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: ./.github/actions/setup-node
      - name: Install
        run: pnpm i
      - name: Snyk monitor
        run: npx snyk monitor --all-projects
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  trivy-scan:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@master
    - name: Run Trivy vulnerability scanner in fs mode
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: '.'
        scan-type: 'fs'
        scan-ref: '.'
        trivy-config: trivy.yaml
        format: 'github'
        output: 'dependency-results.sbom.json'
        github-pat: ${{ secrets.GITHUB_TOKEN }}
