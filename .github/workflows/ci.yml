---
name: CI

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, reopened, edited, ready_for_review, synchronize]

concurrency:
  group: ci-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  clean:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-node
      - name: Install
        run: pnpm i --no-frozen-lockfile
      - name: Lint All
        run: pnpm run clean

  lint:
    runs-on: ubuntu-latest
    needs: ['clean']
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-node
      - name: Install
        run: pnpm i --no-frozen-lockfile
      - name: Lint All
        run: pnpm run lint

  build:
    runs-on: ubuntu-latest
    needs: ['clean']
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-node
      - name: Build
        run: pnpm run build

  build_docs:
    runs-on: ubuntu-latest
    needs: ['build']
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-node
      - name: Build
        run: pnpm run build:docs

  test:
    runs-on: ubuntu-latest
    needs: ['build']
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-node
      - name: Test
        run: pnpm run test
      - name: Setup LCOV
        uses: hrishikesh-kadam/setup-lcov@v1
      - name: Report code coverage
        uses: zgosalvez/github-actions-report-lcov@v3
        with:
          coverage-files: coverage/*.lcov.info
          minimum-coverage: 90
          update-comment: true
          artifact-name: templ-code-coverage-report
          github-token: ${{ secrets.GITHUB_TOKEN }}

  test_cli:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node_version: [18]
      fail-fast: false
    needs: ['build']
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-node
        with:
          node-version: ${{ matrix.node_version }}
      - name: Test CLI
        run: pnpm run test:cli
