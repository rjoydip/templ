---
name: CI

on:
  push:
    branches: [main]
  pull_request:

concurrency:
  group: ci-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  pull-requests: write

jobs:

  pr:
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]'
    steps:
      - uses: thehanimo/pr-title-checker@v1.4.0
        with:
          pass_on_octokit_error: false
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  trivy_scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Run Trivy vulnerability scanner in fs mode
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: .
          scan-type: fs
          scan-ref: .
          output: dependency-results.sbom.json
          github-pat: ${{ secrets.GITHUB_TOKEN }}

  triage:
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]'
    steps:
      - uses: actions/labeler@v4

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-node

      - name: Build
        run: |
          nr -r ci:env-copy
          nr build
          nr -r ci:env-delete
          nr -r build:check

  coverage:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-node

      - name: Coverage
        run: nr coverage

  lint:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-node

      - name: Lint
        run: nr lint

  test:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node_version: [18]
      fail-fast: false
    needs: [build]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: ./.github/actions/setup-node
        with:
          node-version: ${{ matrix.node_version }}

      - name: Test
        run: nr test

      - name: Install package
        run: ni -D concurrently http-server wait-on

      - name: Storybook build
        run: nr -C packages/ui build:storybook

      - name: Storybook test
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          npx concurrently -k -s first -n "Storybook serve,Storybook test" \
          "npx http-server storybook-static --port 6006 --silent" \
          "npx wait-on tcp:6006 && npx test-storybook"

  action-timeline:
    needs: [build, lint, pr, test, trivy_scan, triage]
    runs-on: ubuntu-latest
    steps:
      - uses: Kesin11/actions-timeline@v1
