---
name: CI

on:
  push:
    branches: [main]
  pull_request:

concurrency:
  group: ci-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  pull-requests: write

jobs:
  clean:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-node
      - name: Install
        run: pnpm i --no-frozen-lockfile
      - name: Lint All
        run: pnpm run clean

  lint:
    runs-on: ubuntu-latest
    needs: [clean]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-node
      - name: Install
        run: pnpm i --no-frozen-lockfile
      - name: Lint All
        run: pnpm run lint

  build:
    runs-on: ubuntu-latest
    needs: [clean]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-node
      - name: Build
        run: pnpm run build

  test:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-node
      - name: Test
        run: pnpm run test
      - name: Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  test_cli:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node_version: [18]
      fail-fast: false
    needs: [build]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-node
        with:
          node-version: ${{ matrix.node_version }}
      - name: Test CLI
        run: pnpm run test:cli

  size-report:
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]'
    permissions:
      contents: write
    needs: [lint, build]
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
      - name: Use Node.js LTS
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: pnpm
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install
      - name: Download Previous Size Data
        uses: dawidd6/action-download-artifact@v2
        with:
          name: size-data
          path: temp/size-prev
          if_no_artifact_found: warn
      - run: pnpm size:generate
      - name: Upload Size Data
        uses: actions/upload-artifact@v3
        with:
          name: size-data
          path: temp/size
      - name: Read Size Report
        id: size-report
        uses: juliangruber/read-file-action@v1
        with:
          path: ./size-report.md
      - name: Create commit comment
        uses: peter-evans/commit-comment@v2
        with:
          body: ${{ steps.size-report.outputs.content }}

  triage:
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]'
    steps:
      - uses: actions/labeler@v4

  pr-title-check:
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]'
    steps:
      - uses: thehanimo/pr-title-checker@v1.4.0
        with:
          pass_on_octokit_error: false
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  trivy-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Run Trivy vulnerability scanner in fs mode
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: .
          scan-type: fs
          scan-ref: .
          skip-dirs: third_party
          output: dependency-results.sbom.json
          github-pat: ${{ secrets.GITHUB_TOKEN }}
