---
name: CI

on:
  push:
    branches: [main]
  pull_request:

concurrency:
  group: ci-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  pull-requests: write

jobs:

  pr:
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]'
    steps:
      - uses: thehanimo/pr-title-checker@v1.4.0
        with:
          pass_on_octokit_error: false
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  trivy_scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Run Trivy vulnerability scanner in fs mode
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: .
          scan-type: fs
          scan-ref: .
          output: dependency-results.sbom.json
          github-pat: ${{ secrets.GITHUB_TOKEN }}

  triage:
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]'
    steps:
      - uses: actions/labeler@v4

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-node
      - name: Install
        run: pnpm install --no-frozen-lockfile

      - name: ESlint
        run: pnpm run eslint

      - name: Type Coverage
        run: pnpm run -C scripts lint:type-cov

      - name: Size Limit
        run: pnpm run -C scripts lint:size-limit

      - name: Size Report
        run: pnpm run -C scripts lint:size-report

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-node
      - name: Install
        run: pnpm install --no-frozen-lockfile

      - name: Build
        run: |
          pnpm run -C scripts ci:env-copy
          pnpm run build
          pnpm run -C scripts ci:env-delete
          pnpm run -C scripts ci:dist-check

  test:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node_version: [18]
      fail-fast: false
    needs: [lint, build]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-node
        with:
          node-version: ${{ matrix.node_version }}

      - name: Test
        run: pnpm run test

      - name: Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  action-timeline:
    needs: [build, lint, pr, test, trivy_scan, triage]
    runs-on: ubuntu-latest
    steps:
      - uses: Kesin11/actions-timeline@v1
