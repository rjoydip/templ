---
name: CI

on:
  push:
    branches: [main]
  pull_request:

concurrency:
  group: ci-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-node
      - name: Install
        run: pnpm i --no-frozen-lockfile
      - name: Lint All
        run: pnpm run lint

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-node
      - name: Install
        run: pnpm i --no-frozen-lockfile
      - name: Build
        run: pnpm run build

  docs_build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-node
      - name: Install
        run: pnpm i --no-frozen-lockfile
      - name: Build
        run: pnpm run docs:build

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-node
      - name: Install
        run: pnpm i --no-frozen-lockfile
      - name: Test
        run: |
          pnpm run build
          pnpm run test:ci
      # - name: Codecov
      #   uses: codecov/codecov-action@v3
      #   env:
      #     CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  coverage_report:
    name: Generate templ coverage report
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - uses: ./.github/actions/setup-node
    - name: Install
      run: pnpm i --no-frozen-lockfile
    - name: Test
      run: pnpm run copy:lcov
    - name: Setup LCOV
      uses: hrishikesh-kadam/setup-lcov@v1
    - name: Report code coverage
      uses: zgosalvez/github-actions-report-lcov@v3
      with:
        coverage-files: coverage/*.lcov.info
        minimum-coverage: 90
        artifact-name: templ-code-coverage-report
        github-token: ${{ secrets.GITHUB_TOKEN }}
        working-directory: ./
        update-comment: true

  test_cli:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node_version: [18]
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-node
        with:
          node-version: ${{ matrix.node_version }}
      - name: Install
        run: pnpm i --no-frozen-lockfile
      - name: Test CLI
        run: |
          pnpm run build
          pnpm run test:cli

  snyk:
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]'
    steps:
      - uses: actions/checkout@master
      - uses: ./.github/actions/setup-node
      - name: Install
        run: pnpm i --no-frozen-lockfile
      - name: Snyk monitor
        run: |
          npx snyk auth $SNYK_TOKEN
          npx snyk monitor --all-projects
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  trivy-scan:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@master
    - name: Run Trivy vulnerability scanner in fs mode
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: '.'
        scan-type: 'fs'
        scan-ref: '.'
        skip-dirs: 'third_party'
        output: 'dependency-results.sbom.json'
        github-pat: ${{ secrets.GITHUB_TOKEN }}
