---
name: MegaLinter

on:
  pull_request:
    branches: [main]

env:
  APPLY_FIXES: none
  APPLY_FIXES_EVENT: pull_request
  APPLY_FIXES_MODE: commit
  DISABLE_LINTERS: COPYPASTE_JSCPD
  JAVASCRIPT_DEFAULT_STYLE: prettier
  TYPESCRIPT_DEFAULT_STYLE: prettier
  SPELL_CSPELL_ARGUMENTS: --root /
  REPOSITORY_TRIVY_ARGUMENTS: --skip-dirs node_modules
  REPOSITORY_CHECKOV_ARGUMENTS: -d . --skip-check CKV2_GHA_1
  HTML_DJLINT_FILTER_REGEX_EXCLUDE: storybook-static
  HTML_HTMLHINT_FILTER_REGEX_EXCLUDE: storybook-static
  SPELL_CSPELL_FILTER_REGEX_EXCLUDE: storybook-static
  EDITORCONFIG_EDITORCONFIG_CHECKER_FILTER_REGEX_EXCLUDE: storybook-static
  JSON_V8R_FILTER_REGEX_EXCLUDE: ^(\.\/)?([\w\-\.]+\/)*[\w\-\.]+\.json$
  YAML_V8R_FILTER_REGEX_EXCLUDE: ^(\.\/)?([\w\-\.]+\/)*[\w\-\.]+\.ya?ml$


concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build:
    name: MegaLinter
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - uses: ./.github/actions/setup-node

      - name: Install
        run: pnpm i

      - name: MegaLinter
        id: ml
        uses: oxsecurity/megalinter/flavors/javascript@v7
        env:
          VALIDATE_ALL_CODEBASE: true # Set ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }} to validate only diff with main branch
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Archive production artifacts
        if: ${{ success() }} || ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: MegaLinter reports
          path: |
            megalinter-reports
            mega-linter.log

      - name: Create Pull Request with applied fixes
        id: cpr
        if: steps.ml.outputs.has_updated_sources == 1 && (env.APPLY_FIXES_EVENT == 'all' || env.APPLY_FIXES_EVENT == github.event_name) && env.APPLY_FIXES_MODE == 'pull_request' && (github.event_name == 'push' || github.event.pull_request.head.repo.full_name == github.repository)
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "[MegaLinter] Apply linters automatic fixes"
          title: "[MegaLinter] Apply linters automatic fixes"
          labels: bot
      - name: Create PR output
        if: steps.ml.outputs.has_updated_sources == 1 && (env.APPLY_FIXES_EVENT == 'all' || env.APPLY_FIXES_EVENT == github.event_name) && env.APPLY_FIXES_MODE == 'pull_request' && (github.event_name == 'push' || github.event.pull_request.head.repo.full_name == github.repository)
        run: |
          echo "Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}"
          echo "Pull Request URL - ${{ steps.cpr.outputs.pull-request-url }}"

      - name: Prepare commit
        if: steps.ml.outputs.has_updated_sources == 1 && (env.APPLY_FIXES_EVENT == 'all' || env.APPLY_FIXES_EVENT == github.event_name) && env.APPLY_FIXES_MODE == 'commit' && github.ref != 'refs/heads/main' && (github.event_name == 'push' || github.event.pull_request.head.repo.full_name == github.repository)
        run: sudo chown -Rc $UID .git/
      - name: Commit and push applied linter fixes
        if: steps.ml.outputs.has_updated_sources == 1 && (env.APPLY_FIXES_EVENT == 'all' || env.APPLY_FIXES_EVENT == github.event_name) && env.APPLY_FIXES_MODE == 'commit' && github.ref != 'refs/heads/main' && (github.event_name == 'push' || github.event.pull_request.head.repo.full_name == github.repository)
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          branch: ${{ github.event.pull_request.head.ref || github.head_ref || github.ref }}
          commit_message: "[MegaLinter] Apply linters fixes"
          commit_user_name: megalinter-bot
